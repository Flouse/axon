name: Build ghcr.io image

on:
  push:
    tags:
    branches: [ '*docker*' ]
  workflow_dispatch:
    inputs:
      commit_sha:
        description: 'Commit SHA to build'
        required: true

jobs:
  build-amd64-image-to-ghcr:
    runs-on: ubuntu-latest
    env:
      REGISTRY: 'ghcr.io/'
      IMAGE_NAME: axon

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.commit_sha || '' }}

      # Extract metadata (tags, labels) for the Docker image
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=auto
          tags: |
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=ref,event=branch
            # minimal (short sha)
            type=sha,enable=true,prefix=sha-,format=short
      - name: Echo steps.meta.outputs.bake-file
        run: cat ${{ steps.meta.outputs.bake-file }}

      - name: Login to Github resgistry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push image to ${{ env.REGISTRY }}${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

    # TODO: test the image