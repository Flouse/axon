name: Build docker image
on:
  push:
    branches:
      - build-images
    tags:
      - '*'      
  workflow_dispatch:
    inputs:
      commit_sha:
        description: 'Commit SHA to build'
        required: true


jobs:
  output_tag_name:
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.output.outputs.tag_name }}
    steps:
      - name: output tag name for image
        id: output
        run: |
          if [ ${{ github.event_name }} == 'push' ]; then
            export tag_name=`echo ${{ github.ref }} | awk -F '/' '{print $3}'`
          fi
          if [ ${{ github.event_name }} == 'workflow_dispatch' ]; then
            export tag_name=${{ github.event.inputs.dispatch }}
          fi
          echo "tag_name=$tag_name" >> $GITHUB_OUTPUT

  build-amd64-image_commit:
    runs-on: ubuntu-latest
    needs: output_tag_name
    steps:
      - name: Git checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.commit_sha || github.sha }}
      - name: Login to Github resgistryb
        uses: docker/login-action@v1
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: ghcr.io/simon-tl/axon:amd64-${{ needs.output_tag_name.outputs.tag_name }}

  build-amd64-image-tag:
    runs-on: ubuntu-latest
    needs: output_tag_name
    steps:
      - name: Git checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref || 'build-images' }}
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: simontl/axon:amd64-${{ needs.output_tag_name.outputs.tag_name }}
          
          
  # build-arm64-image:
  #   runs-on: [self-hosted,build]
  #   needs: output_tag_name
  #   env:
  #     AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
  #     AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
  #     AWS_EC2_TYPE:  "c6g.xlarge"
  #     DOCKER_USER: ${{ secrets.DOCKER_HUB_USERNAME }}
  #     DOCKER_PASSWORD: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  #     AXON_TAG: arm64-${{needs.output_tag_name.outputs.tag_name}}
  #   steps:
  #     - name: Get Current Date & Set ENV
  #       id: date
  #       run: |
  #         echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
  #     - name: Git checkout
  #       uses: actions/checkout@v3
  #       with:
  #         ref: ${{ github.ref || 'build-arm64-image' }}
  #     - name: arm64 docker image build
  #       env:
  #         JOB_ID: "build-arm64-image-${{ github.repository_owner }}-${{ steps.date.outputs.date }}-in-10h"
  #       run: |
  #        ./devtools/ci/build-arm64.sh run
  #     - name: clean up
  #       if: ${{ always() }}
  #       env:
  #         JOB_ID: "build-arm64-image-${{ github.repository_owner }}-${{ steps.date.outputs.date }}-in-10h"
  #       run: |
  #        ./devtools/ci/build-arm64.sh clean



